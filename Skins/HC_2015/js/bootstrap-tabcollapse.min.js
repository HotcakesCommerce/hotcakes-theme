!function (a) { "use strict"; var b = function (b, c) { this.options = c, this.$tabs = a(b), this._accordionVisible = !1, this._initAccordion(), this._checkStateOnResize(), this.checkState() }; b.DEFAULTS = { accordionClass: "visible-xxs visible-xs", tabsClass: "hidden-xxs hidden-xs", accordionTemplate: function (a, b, c, d) { return '<div class="panel panel-default">   <div class="panel-heading">      <h4 class="panel-title">        <a class="' + (d ? "" : "collapsed") + '" data-toggle="collapse" data-parent="#' + c + '" href="#' + b + '">           ' + a + '        </a>      </h4>   </div>   <div id="' + b + '" class="panel-collapse collapse ' + (d ? "in" : "") + '">       <div class="panel-body">       </div>   </div></div>' } }, b.prototype.checkState = function () { this.$tabs.is(":visible") && this._accordionVisible ? (this.showTabs(), this._accordionVisible = !1) : this.$accordion.is(":visible") && !this._accordionVisible && (this.showAccordion(), this._accordionVisible = !0) }, b.prototype.showTabs = function () { this.$tabs.trigger(a.Event("show-tabs.bs.tabcollapse")); var b = this.$accordion.find(".panel-body"); b.each(function () { var b = a(this), c = b.data("bs.tabcollapse.tabpane"); c.append(b.children("*").detach()) }), this.$accordion.html(""), this.$tabs.trigger(a.Event("shown-tabs.bs.tabcollapse")) }, b.prototype.showAccordion = function () { this.$tabs.trigger(a.Event("show-accordion.bs.tabcollapse")); var b = this.$tabs.find('li:not(.dropdown) [data-toggle="tab"], li:not(.dropdown) [data-toggle="pill"]'), c = this; b.each(function () { var b = a(this); c.$accordion.append(c._createAccordionGroup(c.$accordion.attr("id"), b)) }), this.$tabs.trigger(a.Event("shown-accordion.bs.tabcollapse")) }, b.prototype._checkStateOnResize = function () { var b = this; a(window).resize(function () { clearTimeout(b._resizeTimeout), b._resizeTimeout = setTimeout(function () { b.checkState() }, 100) }) }, b.prototype._initAccordion = function () { this.$accordion = a('<div class="panel-group ' + this.options.accordionClass + '" id="' + this.$tabs.attr("id") + '-accordion"></div>'), this.$tabs.after(this.$accordion), this.$tabs.addClass(this.options.tabsClass), this.$tabs.siblings(".tab-content").addClass(this.options.tabsClass) }, b.prototype._createAccordionGroup = function (b, c) { var d = c.attr("data-target"), e = c.parent().is(".active"); d || (d = c.attr("href"), d = d && d.replace(/.*(?=#[^\s]*$)/, "")); var f = a(d), g = f.attr("id") + "-collapse", h = a(this.options.accordionTemplate(c.html(), g, b, e)); return h.find(".panel-body").append(f.children("*").detach()).data("bs.tabcollapse.tabpane", f), h }, a.fn.tabCollapse = function (c) { return this.each(function () { var d = a(this), e = d.data("bs.tabcollapse"), f = a.extend({}, b.DEFAULTS, d.data(), "object" == typeof c && c); e || d.data("bs.tabcollapse", new b(this, f)) }) }, a.fn.tabCollapse.Constructor = b }(window.jQuery);